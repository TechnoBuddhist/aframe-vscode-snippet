{
"A-FRAME Component": {
  "prefix": "AFC",
  "body": [
		"/**"
		" * ${1:The long description of the file's purpose goes here and"
 		" * describes in detail the complete functionality of the file."
 		" * This description can span several lines and ends with a period}."
 		" *"
		" * @summary   ${2:A short description of the file}."
 		" *"
 		" * @link      URL"
		" *"
		" * @property {string} propertyExample  Description of this property."
		" * @property {multi-property} propertyExample  Description of this property."
		" *"
		" */"
    "AFRAME.registerComponent('${TM_FILENAME}${3}', {"
			"\t// -------------------- Standard Commponent Code --------------------"
			"\t// For Component Help see https://aframe.io/docs/0.4.0/core/component.html"
			"\t"
			"\t//dependencies: ['nameOfComponent${TM_FILENAME}DependsOn'],"
			"\t"
			"\t// By default, a component can only have one instance. This enables multiple instancing on your component."
			"\t// see https://aframe.io/docs/0.4.0/core/component.html#multiple-instancing"
			"\t//multiple: true,"
			"\t"
			"\t/**"
			"\t * @summary Schema defines component properties."
			"\t * see https://aframe.io/docs/0.4.0/core/component.html#property-types"
			"\t */"
      "\tschema: {"
			"\t/*"
			"\t\te.g. colorTop: {"
			"\t\t\ttype: 'array|asset|boolean|color|int|number|selector|selectorAll|string|vec2|vec3|vec4',"
			"\t\t\tdefault: 'black',"
			"\t\t\t// Takes \"a/b\" and turns to [\"a\", \"b\"."
			"\t\t\tparse: function (value) {"
      "\t\t\t\treturn value.split('/');"
    	"\t\t\t}"
			"\t\t},"
			"\t*/"
      "\t},"
			""
      "\t/**"
      "\t * @summary Run when component is attached."
			"\t *"
			"\t * Called once when the component is attached to an entity. Used to set up initial state and instantiate variables."
			"\t *"
      "\t* @member {Element}   el - Entity."
      "\t* @member           data - Component data."
      "\t*/"
      "\tinit: function () {"
      "\t\t// Do stuff using `this.el` and `this.data`."
      "\t\tvar data = this.data;"
      "\t\tvar el = this.el;"
      ""
      "\t\t$0//el.addEventListener();"
      "\t},"
			""
			"\t// update() - Called both when the component is initialized and whenever the componentâ€™s data changes (e.g, via setAttribute). Used to modify the entity."
			"\t// see https://aframe.io/docs/0.4.0/core/component.html#update-olddata"
      "\tupdate: function (oldData) {"
      "\t\t// Do stuff using `this.el` and `this.data` and possibly `oldData`(as it was prior to this update)."
      "\t},"
			""
			"\t// remove() - Called when the component detaches from the element (e.g., via removeAttribute). Used to undo all previous modifications to the entity."
      "\tremove: function () {"
      "\t},"
			""
			"\t// tick() - Called on each render loop or tick of the scene. Used for continuous changes."
      "\ttick: function (time, timeDelta) {"
      "\t},"
			""
			"\t// play() - Called whenever the scene or entity plays to add any background or dynamic behavior. Used to start or resume behavior."
			"\t// Useful to addEventListeners()"
      "\tplay: function () {"
			"\t\t//var el = this.el;"
    	"\t\t//el.addEventListener('hit', this.onHit);"
      "\t},"
			""
			"\t// pause()	- Called whenever the scene or entity pauses to remove any background or dynamic behavior. Used to pause behavior."
			"\t// Useful to removeEventListeners()"
      "\tpause: function () {"
			"\t\t//var el = this.el;"
    	"\t\t//el.removeEventListener('hit', this.onHit);"
      "\t},"
			""
			"\t// updateSchema() - Called on every update. Can be used to dynamically modify the schema."
      "\tupdateSchema: function (data) {"
      "\t},"
			""
			"\t// flushToDOM() - Called on every update. Can be used to dynamically modify the schema."
      "\tflushToDOM: function (data) {"
      "\t}",
			""
			"\t// -------------------- Your Custom Commponent Code --------------------"
    	"});"
  ],
  "description": "A-FRAME Component Template"
  }
}
